/**
 * Orders API
 * Simple API to manage businesses and orders
 *
 * OpenAPI spec version: 1.0.1
 * Contact: sergio.adonis@outlook.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class BusinessBusinessProps {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("category")
  private String category = null;
  @SerializedName("tags")
  private List<String> tags = null;
  @SerializedName("photoUrl")
  private String photoUrl = null;
  @SerializedName("type")
  private String type = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Business category
   **/
  @ApiModelProperty(value = "Business category")
  public String getCategory() {
    return category;
  }
  public void setCategory(String category) {
    this.category = category;
  }

  /**
   * labels or tags
   **/
  @ApiModelProperty(value = "labels or tags")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPhotoUrl() {
    return photoUrl;
  }
  public void setPhotoUrl(String photoUrl) {
    this.photoUrl = photoUrl;
  }

  /**
   * Internal business object type
   **/
  @ApiModelProperty(value = "Internal business object type")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessBusinessProps businessBusinessProps = (BusinessBusinessProps) o;
    return (this.name == null ? businessBusinessProps.name == null : this.name.equals(businessBusinessProps.name)) &&
        (this.description == null ? businessBusinessProps.description == null : this.description.equals(businessBusinessProps.description)) &&
        (this.category == null ? businessBusinessProps.category == null : this.category.equals(businessBusinessProps.category)) &&
        (this.tags == null ? businessBusinessProps.tags == null : this.tags.equals(businessBusinessProps.tags)) &&
        (this.photoUrl == null ? businessBusinessProps.photoUrl == null : this.photoUrl.equals(businessBusinessProps.photoUrl)) &&
        (this.type == null ? businessBusinessProps.type == null : this.type.equals(businessBusinessProps.type));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.category == null ? 0: this.category.hashCode());
    result = 31 * result + (this.tags == null ? 0: this.tags.hashCode());
    result = 31 * result + (this.photoUrl == null ? 0: this.photoUrl.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessBusinessProps {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  category: ").append(category).append("\n");
    sb.append("  tags: ").append(tags).append("\n");
    sb.append("  photoUrl: ").append(photoUrl).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
