/*
 * Orders API
 *
 * Simple API to manage businesses and orders
 *
 * OpenAPI spec version: 1.0.1
 * Contact: sergio.adonis@outlook.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BusinessApiController : ControllerBase
    { 
        /// <summary>
        /// Create business
        /// </summary>
        
        /// <param name="bussines"></param>
        /// <response code="201">ok</response>
        /// <response code="0">error</response>
        [HttpPost]
        [Route("/sergioadonis/orders-api/1.0.1/business")]
        [ValidateModelState]
        [SwaggerOperation("CreateBusiness")]
        [SwaggerResponse(statusCode: 201, type: typeof(Business), description: "ok")]
        [SwaggerResponse(statusCode: 0, type: typeof(List<Error>), description: "error")]
        public virtual IActionResult CreateBusiness([FromBody]Business bussines)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Business));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(List<Error>));

            string exampleJson = null;
            exampleJson = "{\n  \"photoUrl\" : \"https://user-contents.domain.example.com/12ea34-651d76c-87bd-85b6f9\",\n  \"name\" : \"El Zócalo\",\n  \"description\" : \"Restaurante de comida mexicana, tequila, karaoke y mucho más!\",\n  \"id\" : \"12ea34-651d76c-87bd-85b6f9\",\n  \"category\" : \"Mexican restaurant\",\n  \"type\" : \"RSTRNT\",\n  \"tags\" : [ \"Mexican food\", \"Karaoke\", \"Tacos\", \"Tequila\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Business>(exampleJson)
            : default(Business);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete business by id
        /// </summary>
        
        /// <param name="id"></param>
        /// <response code="200">ok</response>
        /// <response code="0">error</response>
        [HttpDelete]
        [Route("/sergioadonis/orders-api/1.0.1/business/{id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteBusinessById")]
        [SwaggerResponse(statusCode: 0, type: typeof(List<Error>), description: "error")]
        public virtual IActionResult DeleteBusinessById([FromRoute][Required]string id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(List<Error>));


            throw new NotImplementedException();
        }

        /// <summary>
        /// Get business by id
        /// </summary>
        
        /// <param name="id"></param>
        /// <response code="200">ok</response>
        /// <response code="0">error</response>
        [HttpGet]
        [Route("/sergioadonis/orders-api/1.0.1/business/{id}")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinessById")]
        [SwaggerResponse(statusCode: 200, type: typeof(Business), description: "ok")]
        [SwaggerResponse(statusCode: 0, type: typeof(List<Error>), description: "error")]
        public virtual IActionResult GetBusinessById([FromRoute][Required]string id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Business));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(List<Error>));

            string exampleJson = null;
            exampleJson = "{\n  \"photoUrl\" : \"https://user-contents.domain.example.com/12ea34-651d76c-87bd-85b6f9\",\n  \"name\" : \"El Zócalo\",\n  \"description\" : \"Restaurante de comida mexicana, tequila, karaoke y mucho más!\",\n  \"id\" : \"12ea34-651d76c-87bd-85b6f9\",\n  \"category\" : \"Mexican restaurant\",\n  \"type\" : \"RSTRNT\",\n  \"tags\" : [ \"Mexican food\", \"Karaoke\", \"Tacos\", \"Tequila\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Business>(exampleJson)
            : default(Business);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get businesses
        /// </summary>
        
        /// <response code="200">ok</response>
        /// <response code="0">error</response>
        [HttpGet]
        [Route("/sergioadonis/orders-api/1.0.1/business")]
        [ValidateModelState]
        [SwaggerOperation("GetBusinesses")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Business>), description: "ok")]
        [SwaggerResponse(statusCode: 0, type: typeof(List<Error>), description: "error")]
        public virtual IActionResult GetBusinesses()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Business>));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(List<Error>));

            string exampleJson = null;
            exampleJson = "[ {\n  \"photoUrl\" : \"https://user-contents.domain.example.com/12ea34-651d76c-87bd-85b6f9\",\n  \"name\" : \"El Zócalo\",\n  \"description\" : \"Restaurante de comida mexicana, tequila, karaoke y mucho más!\",\n  \"id\" : \"12ea34-651d76c-87bd-85b6f9\",\n  \"category\" : \"Mexican restaurant\",\n  \"type\" : \"RSTRNT\",\n  \"tags\" : [ \"Mexican food\", \"Karaoke\", \"Tacos\", \"Tequila\" ]\n}, {\n  \"photoUrl\" : \"https://user-contents.domain.example.com/12ea34-651d76c-87bd-85b6f9\",\n  \"name\" : \"El Zócalo\",\n  \"description\" : \"Restaurante de comida mexicana, tequila, karaoke y mucho más!\",\n  \"id\" : \"12ea34-651d76c-87bd-85b6f9\",\n  \"category\" : \"Mexican restaurant\",\n  \"type\" : \"RSTRNT\",\n  \"tags\" : [ \"Mexican food\", \"Karaoke\", \"Tacos\", \"Tequila\" ]\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Business>>(exampleJson)
            : default(List<Business>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update business by id
        /// </summary>
        
        /// <param name="id"></param>
        /// <param name="bussines"></param>
        /// <response code="200">ok</response>
        /// <response code="0">error</response>
        [HttpPut]
        [Route("/sergioadonis/orders-api/1.0.1/business/{id}")]
        [ValidateModelState]
        [SwaggerOperation("UpdateBusinessById")]
        [SwaggerResponse(statusCode: 200, type: typeof(Business), description: "ok")]
        [SwaggerResponse(statusCode: 0, type: typeof(List<Error>), description: "error")]
        public virtual IActionResult UpdateBusinessById([FromRoute][Required]string id, [FromBody]Business bussines)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Business));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(List<Error>));

            string exampleJson = null;
            exampleJson = "{\n  \"photoUrl\" : \"https://user-contents.domain.example.com/12ea34-651d76c-87bd-85b6f9\",\n  \"name\" : \"El Zócalo\",\n  \"description\" : \"Restaurante de comida mexicana, tequila, karaoke y mucho más!\",\n  \"id\" : \"12ea34-651d76c-87bd-85b6f9\",\n  \"category\" : \"Mexican restaurant\",\n  \"type\" : \"RSTRNT\",\n  \"tags\" : [ \"Mexican food\", \"Karaoke\", \"Tacos\", \"Tequila\" ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Business>(exampleJson)
            : default(Business);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
